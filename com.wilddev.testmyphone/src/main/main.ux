<template>
    <div class="container">
        <!-- Tabs -->
        <tabs>
            <!-- Tab-content,Used to display the content area of the tab, the height is filled with tabs remaining space by default, and the sub-components are arranged horizontally. -->
            <tab-content class="group-container">
                <div class="group-content" for="{{tabItem in tabItemList}}">
                    <div class="introduce">
                        <text class="introduce-detail">
                            {{$t('message.main.mainTitlebar')}}
                        </text>
                    </div>
                    <div class="item-container" for="{{(index, group) in $t('message.main.tabsData')[tabItem].groupList}}">
                        <div class="item-title">
                            <text class="item-title-detail {{selectedIdxMap[tabItem] === index ? 'selected-text': ''}}"
                                onclick="selectConFn(tabItem, index)">{{group.name}}</text>
                        </div>
                        <div class="item-content {{selectedIdxMap[tabItem] === index ? 'selected-group': ''}}">
                            <block for="{{i in group.caseList}}">
                                <div class="item-li" onclick="routePath(i.path)">
                                    <text class="item-li-detail">{{i.name}}</text>
                                    <image class="item_arrow_img" src="/common/img/arrow_right.png"></image>
                                </div>
                            </block>
                        </div>
                    </div>
                </div>
            </tab-content>

            <tab-bar class="footer-container">
                <text class="tab-text" for="{{tabItemList}}">{{$t('message.main.tabsData')[$item].name}}</text>
            </tab-bar>
        </tabs>
    </div>
</template>

<style>
    .container {
        background-color: #f8f8ff;
        flex: 1;
        flex-direction: column;
    }

    .footer-container {
        height: 120px;
        border-top-width: 1px;
        border-color: #bbbbbb;
        background-color: #ffffff;
        justify-content: space-around;
    }

    .group-container {
        flex: 1;
        flex-direction: column;
    }

    .group-content {
        flex-direction: column;
        flex: 1;
    }

    .introduce {
        padding-left: 80px;
        padding-right: 80px;
        margin-bottom: 80px;
        margin-top: 60px;
    }

    .introduce-detail {
        text-align: center;
        flex: 1;
        line-height: 50px;
        color: #888888;
    }

    .item-container {
        margin-left: 30px;
        margin-right: 30px;
        background-color: #ffffff;
        flex-direction: column;
        margin-bottom: 30px;
    }

    .item-title-detail {
        padding: 40px;
        flex: 1;
        color: #000000;
    }

    .item-content {
        flex-direction: column;
        padding: 30px;
        display: none;
    }

    .item-li {
        border-color: #bbbbbb;
        border-bottom-width: 1px;
        align-items: center;
    }

    .item_arrow_img {
        height: 40px;
        width: 20px;
        margin-right: 30px;
        resize-mode: contain;
    }

    .item-li-detail {
        padding-top: 25px;
        padding-bottom: 25px;
        color: #000000;
        flex: 1;
    }

    .tab-text {
        text-align: center;
        line-height: 120px;
    }

    .tab-text:active {
        color: #007dff;
    }

    .show {
        display: flex;
    }

    .show-txt {
        color: #cccccc;
    }

    .selected-group {
        display: flex;
    }
</style>

<script>
    import router from '@system.router'

    export default {
        /**
         * @desc
         * Attributes defined in private are not allowed to be overwritten
         * A property defined within protected that allows data to be overridden by the application's internal page request
         * Attributes defined in public allow data to be overwritten by incoming data
         */
        private: {
            tabItemList: [],
            selectedIdxMap: {}
        },
        onInit() {
            this.$page.setTitleBar({ text: this.$t('message.main.mainTitlebar') });
            // initialize tabItemList
            this.tabItemList = [].concat(Object.keys(this.$t('message.main.tabsData')))
            this.tabItemList.forEach(tabItem => {
                this.$set(`selectedIdxMap.${tabItem}`, -1)
            });
        },
        selectConFn(tabItem, index) {
            this.selectedIdxMap[tabItem] = this.selectedIdxMap[tabItem] === index ? -1 : index
        },
        routePath(path) {
            router.push({ uri: path })
        }
    }
</script>