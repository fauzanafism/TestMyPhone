<template>
    <div class="container">
        <div class="page-title-wrap">
            <text class="page-title">{{componentName}}</text>
        </div>

        <div class="item-container">
            <div class="item-content">
                <text class="txt">{{$t('message.interface.system.network.networkType')}}{{networkType}}</text>
            </div>
            <input type="button" class="btn" onclick="getNetworkType" value="{{$t('message.interface.system.network.getNetworkType')}}" />

            <div class="item-content">
                <text class="txt">{{$t('message.interface.system.network.currentType')}}{{currentType}}</text>
            </div>
            <input type="button" class="btn" onclick="listenNetwork" value="{{$t('message.interface.system.network.listenNetwork')}}" />
            <input type="button" class="btn" onclick="cancelNetwork" value="{{$t('message.interface.system.network.cancelNetwork')}}" />
            <div class="item-content">
                <text class="txt">{{$t('message.interface.system.network.carrierInformation')}}{{simOperatorsInfo}}</text>
            </div>
            <input type="button" class="btn" onclick="getSimOperators" value="{{$t('message.interface.system.network.getCarrierInformation')}}" />
	</div>
    </div>
</template>

<style>
    @import "../../../common/css/common.css";

    .item-container {
        margin-bottom: 50px;
        margin-right: 60px;
        margin-left: 60px;
        flex-direction: column;
    }

    .item-content {
        flex-direction: column;
        background-color: #ffffff;
        padding: 30px;
        margin-bottom: 100px;
        align-items: flex-start;
    }
</style>

<script>
    import network from '@system.network'
    import prompt from '@system.prompt'

    export default {
        data: {
            componentName: 'network',
            componentData: {},
            networkType: '',
            currentType: '',
            simOperatorsInfo: '',
        },
        onInit: function () {
            this.$page.setTitleBar({ text: 'network' })
            this.componentData = this.$t('message.interface.system.network');
        },
        getNetworkType: function () {
            var that = this;
            network.getType({
                success: function (ret) {
                    that.networkType = JSON.stringify(ret);
                },
                fail: function (erromsg, errocode) {
                    console.log('network.getType----------' + errocode + ': ' + erromsg);
                },
                complete: function () {
                    prompt.showToast({
                        message: that.componentData.getSuccess
                    })
                }
            })
        },
        listenNetwork: function () {
            var that = this;
            network.subscribe({
                callback: function (ret) {
                    that.currentType = JSON.stringify(ret);
                    prompt.showToast({ message: that.componentData.listenSuccess + JSON.stringify(ret) })
                },
                fail: function (erromsg, errocode) {
                    prompt.showToast({ message: that.componentData.listenFailed + errocode + ': ' + erromsg })
                    console.log('network.subscribe----------' + errocode + ': ' + erromsg);
                }
            })
        },
        cancelNetwork: function () {
            network.unsubscribe();
        },
        getSimOperators: function () {
            var that = this;
            var simOperatorsInfo = '';
            network.getSimOperators({
                success: function (data) {
                    console.log(`size: ${data.size}`)
                    for (const i in data.operators) {
                        simOperatorsInfo += `operator: ${data.operators[i].operator},\tslotIndex:${data.operators[i].slotIndex},\tisDefaultDataOperator:${data.operators[i].isDefaultDataOperator},\n`;
                    }
                    that.simOperatorsInfo = JSON.stringify(data);
                    console.log(simOperatorsInfo);
                },
                fail: function (erromsg, errocode) {
                    console.log('errocode: ' + errocode + ' ¨C erromsg: ' + erromsg)
                }
            })
        }
    }
</script>