<template>
  <!-- There can only be one root node in the template -->
  <div class="demo-page">
    <text class="title">{{ $t('message.interface.basic.routerPageA.title') }}{{title}}</text>
    <!-- Click to jump to the details page -->
    <div class="label-item">
      <input name="radio" type="radio" id="radio1" style="width: 80px;" onclick="checkDefault" /><text>default</text>
      <input name="radio" type="radio" id="radio2" style="width: 80px;" onclick="checkClearTask" /><text>clearTask</text>
    </div>

    <text>page params:{{params}}</text>
    <input class="btn" type="button" value="{{ $t('message.interface.basic.routerPageA.pageAValue') }}" onclick="routePageA" />
    <input class="btn" type="button" value="{{ $t('message.interface.basic.routerPageA.pageBValue') }}" onclick="routePageB" />
    <input class="btn" type="button" value="{{ $t('message.interface.basic.routerPageA.pageCValue') }}" onclick="routePageC" />
    <input class="btn" type="button" value="{{ $t('message.interface.basic.routerPageA.homeValue') }}" onclick="routeHome" />
  </div>
</template>

<style>
  .demo-page {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .title {
    font-size: 40px;
    text-align: center;
  }

  .label-item {
    align-items: center;
    border-bottom-width: 1px;
    border-color: #dddddd;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #007dff;
    font-size: 30px;
    color: #ffffff;
  }
</style>

<script>
  import router from '@system.router'

  export default {
    // The data model of page level components, which affects the coverage mechanism of incoming data: properties defined in private are not allowed to be overwritten
    private: {
      title: 'PageA',
      flag: '',
      params: 0
    },
    onRefresh: function (data) {
      console.log('pageA on onRefresh');
      console.log(data);
      if (data.index) {
        this.params = parseInt(data.index)
      } else {
        console.log('cannot find parameter: index')
      }
    },
    onDestroy: function () {
      console.log("pageA on destroy");
    },
    routePageA() {
      router.push({
        params: {
          ___PARAM_LAUNCH_FLAG___: this.flag,
          index: this.params + 1,
          dummy1: 'dummy params1'
        },
        uri: "interface/basic/router/routerPageA"
      })
    },
    routePageB() {
      router.push({
        params: {
          ___PARAM_LAUNCH_FLAG___: this.flag,
          index: this.params + 1,
          dummy2: 'dummy params2'
        },
        uri: 'interface/basic/router/routerPageB'
      })
    },
    routePageC() {
      router.push({
        params: {
          ___PARAM_LAUNCH_FLAG___: this.flag
        },
        uri: 'interface/basic/router/routerPageC'
      })
    },
    routeHome() {
      router.push({
        uri: '/interface/basic/router/routerLaunchHome'
      })
    },
    checkDefault() {
      this.flag = ""
    },
    checkClearTask() {
      this.flag = "clearTask"
    }
  }
</script>